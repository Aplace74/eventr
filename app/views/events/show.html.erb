<% content_for :meta_title, "#{l(@event.start_date, format: :custom).capitalize} | #{@event.title} chez #{@event.user.first_name}" %>

<%= render "shared/navbar", user: current_user %>
<%= render "shared/event_header", event: @event, map_url: @map_url, agenda_url: @agenda_url %>
<div class="container">
  <div class="description p-3">
    <p><strong>Infos :</strong> <%= @event.description %></p>
    <div class="text-center ml-1">
      <%= cl_image_tag @event.user.avatar, height: 30, width: 30, crop: :fill, class: "avatar" %>
      <p><%= @event.user.first_name %></p>
    </div>
  </div>
</div>

<div class="separator">
  <h4>Qui ramÃ¨ne quoi ?</h4>
</div>

<div class="container">
  <div class="list">
    <% @categories.each do |category| %>
      <% supplies = category.category_supplies(@event) %>
      <div class="category">
        <a class="category-title" data-toggle="collapse" href="#<%= category.name %>" role="button" aria-expanded="false" aria-controls="<%= category.name %>">
            <p><strong><%= category.name %></strong> ( <%= category.status(@event) %> / <%= supplies.size %> )</p>
            <i class="fas fa-plus"></i>
        </a>
        <div class="category-list collapse" id="<%= category.name %>">
          <% supplies.each do |supply| %>
            <%= render "contributions/supply_card", supply: supply, participation: @participation, contribution: @participation.contributions.find_by(supply_id: supply.id) %>
          <% end %>
          <div class="text-center">
            <button type="button" class="btn-modal btn-base btn-blue" data-category="<%= category.id %>" data-toggle="modal" data-target="#new">
            Ajouter un Ã©lÃ¨ment
            </button>
          </div>
        </div>
      </div>
    <% end %>
  </div>
</div> 

<!-- Modal -->
<div class="modal fade" id="new" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="add modal-content">
      <div class="modal-body">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">X</span>
        </button>
          <h2>Que faut-il de plus ? ðŸŽ‰</h2>
          <form class="add-stuff" id="modal-form" action="<%= event_supplies_path(@event) %>" method="post" data-category="">
            <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
            <%= hidden_field_tag :event_id, @event.id %>
            <input type="hidden" name="category_id" id="category_id" value="0">
            <input class="add-number" type="text" name="title" placeholder="Quoi ?">
            <input class="add-number" type="number" name="quantity" placeholder="Combien ?">
            <input type="submit" value="Ajouter" class="btn-thin btn-base btn-blue">
          </form>
      </div>
    </div>  
  </div>
</div>

<script>
  const activeTab = document.getElementById("item-details")
  activeTab.classList.add("active")

  const refreshJs = (card) => {
    const minus = card.querySelector('.minus');
    const plus = card.querySelector('.plus');
    const partInput = card.querySelector('.part');
    const incrementers = card.querySelectorAll('.incrementer');
    const counter = card.querySelector('.counter');
    const submitContribution = card.querySelector('.submit');
    let count = parseInt(counter.dataset.count, 10);
    const rest = parseInt(counter.dataset.rest, 10) + count;

    const externalFunction = (event) => {
      let count = parseInt(counter.dataset.count, 10);
      const part = count;
      count += parseInt(event.currentTarget.dataset.offset, 10);
      counter.innerHTML = count;
      counter.dataset.count = count;
      partInput.value = count;
      if (count == part) {
        submitContribution.setAttribute('disabled', 'true');
        submitContribution.classList.add('inactive');
      } else { 
        submitContribution.removeAttribute('disabled');
        submitContribution.classList.remove('inactive');
      }
      if (count == rest) {
        plus.setAttribute('disabled', 'true');
      } else { plus.removeAttribute('disabled'); }
      if (count <= 0) {
        minus.setAttribute('disabled', 'true');
      } else { minus.removeAttribute('disabled'); }
    };

    incrementers.forEach((incrementer) => {
      if (count === rest) { plus.setAttribute('disabled', 'true'); }
      if (count <= 0) { minus.setAttribute('disabled', 'true'); } 
      if (true) {
        console.log('adding event listener for the first time');
        incrementer.addEventListener('click', (event) => {
          externalFunction(event);
        });
      };
      
    });
  };
  const cards = document.querySelectorAll('.supply-card');
  cards.forEach((card) => {
    refreshJs(card)
  });
</script>